{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Online Book Thrift Store\\\\frontend\\\\src\\\\Components\\\\Chat\\\\ChatBox.js\",\n  _s = $RefreshSig$();\n/*import React, { useEffect, useState, useRef } from 'react';\r\nimport { getMessages } from './chatHelper';\r\nimport {format} from \"timeago.js\" ; \r\n\r\nconst ChatBox = ({ chat, currentUser }) => {\r\n  const otherUser = chat?.members.find(member => member._id !== currentUser);\r\n  const [messages, setMessages] = useState([]);\r\n  const messageContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const mdata = await getMessages(chat._id); // Wait for the messages to be fetched\r\n        setMessages(mdata.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    if (chat !== null) {\r\n      fetchMessages();\r\n    }\r\n  }, [chat]);\r\n\r\n  useEffect(() => {\r\n    // Scroll to the bottom of the message container whenever messages change\r\n    if (messageContainerRef.current) {\r\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"w-[75%] bg-white rounded-lg shadow-lg p-4 flex-grow\">\r\n      <div className=\"flex items-center m-2 bg-blue-100 p-4 rounded-md\">\r\n        <img src={otherUser?.profilePicture} alt=\"User\" className=\"w-10 h-10 rounded-full mr-2\" />\r\n        <div className=\"flex flex-col\">\r\n          <span className=\"text-sm font-medium\">{otherUser?.name}</span>\r\n        </div>\r\n      </div>\r\n      <div ref={messageContainerRef} className=\"h-64 overflow-y-auto mb-4\">\r\n  \r\n  /*{Array.isArray(messages) && messages.map((message, index) => (\r\n    <div\r\n      key={index}\r\n      className={`p-2 rounded-lg ${\r\n        message.senderId === currentUser ? 'bg-blue-500 text-white self-end' : 'bg-gray-200 text-black self-start'\r\n      }`}\r\n    >\r\n      <span>{message.text}</span>\r\n      <span className=\"text-xs\">{format(message.createdAt)}</span>\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n\r\n      <form>\r\n        <textarea className=\"w-full border border-gray-300 rounded-lg p-2\" rows=\"3\" placeholder=\"Type your message here...\"></textarea>\r\n        <button type=\"submit\" className=\"mt-2 bg-blue-500 text-white py-2 px-4 rounded-lg\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;*/\nimport React, { useEffect, useState } from 'react';\nimport { getMessages } from './chatHelper';\nimport { format } from \"timeago.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  chat,\n  currentUser\n}) => {\n  _s();\n  const otherUser = chat === null || chat === void 0 ? void 0 : chat.members.find(member => member._id !== currentUser);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const messagesData = await getMessages(chat._id);\n        setMessages(messagesData);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n    if (chat !== null) {\n      fetchMessages();\n    }\n  }, [chat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-[75%] bg-white rounded-lg shadow-lg p-4 flex-grow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center m-2 bg-blue-100 p-4 rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: otherUser === null || otherUser === void 0 ? void 0 : otherUser.profilePicture,\n        alt: \"User\",\n        className: \"w-10 h-10 rounded-full mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium\",\n          children: otherUser === null || otherUser === void 0 ? void 0 : otherUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64 overflow-y-auto mb-4 flex flex-col-reverse\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-gray-900\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 rounded-lg ${message.senderId === currentUser ? 'bg-blue-500 text-white ml-auto' : 'bg-gray-200 text-black'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs\",\n          children: format(message.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"w-full border border-gray-300 rounded-lg p-2\",\n        rows: \"3\",\n        placeholder: \"Type your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mt-2 bg-blue-500 text-white py-2 px-4 rounded-lg\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"iENrkQA4ceL8nzHtV8t1eR+7xGM=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useState","getMessages","format","jsxDEV","_jsxDEV","ChatBox","chat","currentUser","_s","otherUser","members","find","member","_id","messages","setMessages","loading","setLoading","fetchMessages","messagesData","error","console","log","className","children","src","profilePicture","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","map","message","index","senderId","text","createdAt","rows","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/Online Book Thrift Store/frontend/src/Components/Chat/ChatBox.js"],"sourcesContent":["/*import React, { useEffect, useState, useRef } from 'react';\r\nimport { getMessages } from './chatHelper';\r\nimport {format} from \"timeago.js\" ; \r\n\r\nconst ChatBox = ({ chat, currentUser }) => {\r\n  const otherUser = chat?.members.find(member => member._id !== currentUser);\r\n  const [messages, setMessages] = useState([]);\r\n  const messageContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const mdata = await getMessages(chat._id); // Wait for the messages to be fetched\r\n        setMessages(mdata.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    if (chat !== null) {\r\n      fetchMessages();\r\n    }\r\n  }, [chat]);\r\n\r\n  useEffect(() => {\r\n    // Scroll to the bottom of the message container whenever messages change\r\n    if (messageContainerRef.current) {\r\n      messageContainerRef.current.scrollTop = messageContainerRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"w-[75%] bg-white rounded-lg shadow-lg p-4 flex-grow\">\r\n      <div className=\"flex items-center m-2 bg-blue-100 p-4 rounded-md\">\r\n        <img src={otherUser?.profilePicture} alt=\"User\" className=\"w-10 h-10 rounded-full mr-2\" />\r\n        <div className=\"flex flex-col\">\r\n          <span className=\"text-sm font-medium\">{otherUser?.name}</span>\r\n        </div>\r\n      </div>\r\n      <div ref={messageContainerRef} className=\"h-64 overflow-y-auto mb-4\">\r\n  \r\n  /*{Array.isArray(messages) && messages.map((message, index) => (\r\n    <div\r\n      key={index}\r\n      className={`p-2 rounded-lg ${\r\n        message.senderId === currentUser ? 'bg-blue-500 text-white self-end' : 'bg-gray-200 text-black self-start'\r\n      }`}\r\n    >\r\n      <span>{message.text}</span>\r\n      <span className=\"text-xs\">{format(message.createdAt)}</span>\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n\r\n      <form>\r\n        <textarea className=\"w-full border border-gray-300 rounded-lg p-2\" rows=\"3\" placeholder=\"Type your message here...\"></textarea>\r\n        <button type=\"submit\" className=\"mt-2 bg-blue-500 text-white py-2 px-4 rounded-lg\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getMessages } from './chatHelper';\r\nimport {format} from \"timeago.js\" ; \r\n\r\nconst ChatBox = ({ chat, currentUser }) => {\r\n  const otherUser = chat?.members.find(member => member._id !== currentUser);\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const messagesData = await getMessages(chat._id);\r\n        setMessages(messagesData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (chat !== null) {\r\n      fetchMessages();\r\n    }\r\n  }, [chat]);\r\n\r\n  return (\r\n    <div className=\"w-[75%] bg-white rounded-lg shadow-lg p-4 flex-grow\">\r\n      <div className=\"flex items-center m-2 bg-blue-100 p-4 rounded-md\">\r\n        <img src={otherUser?.profilePicture} alt=\"User\" className=\"w-10 h-10 rounded-full mr-2\" />\r\n        <div className=\"flex flex-col\">\r\n          <span className=\"text-sm font-medium\">{otherUser?.name}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"h-64 overflow-y-auto mb-4 flex flex-col-reverse\">\r\n        {loading ? (\r\n          <div className=\"flex justify-center items-center h-full\">\r\n            <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-gray-900\"></div>\r\n          </div>\r\n        ) : (\r\n          messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={`p-2 rounded-lg ${\r\n                message.senderId === currentUser ? 'bg-blue-500 text-white ml-auto' : 'bg-gray-200 text-black'\r\n              }`}\r\n            >\r\n              <span>{message.text}</span>\r\n              <span className=\"text-xs\">{format(message.createdAt)}</span>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <form>\r\n        <textarea className=\"w-full border border-gray-300 rounded-lg p-2\" rows=\"3\" placeholder=\"Type your message here...\"></textarea>\r\n        <button type=\"submit\" className=\"mt-2 bg-blue-500 text-white py-2 px-4 rounded-lg\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}