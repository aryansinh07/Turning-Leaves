{"ast":null,"code":"'use strict';\n\nvar http = require('http');\nvar https = require('https');\nvar urllib = require('url');\nvar zlib = require('zlib');\nvar PassThrough = require('stream').PassThrough;\nvar Cookies = require('./cookies');\nvar MAX_REDIRECTS = 5;\nmodule.exports = function (url, options) {\n  return fetch(url, options);\n};\nmodule.exports.Cookies = Cookies;\nfunction fetch(url, options) {\n  options = options || {};\n  options.fetchRes = options.fetchRes || new PassThrough();\n  options.cookies = options.cookies || new Cookies();\n  options.redirects = options.redirects || 0;\n  options.maxRedirects = isNaN(options.maxRedirects) ? MAX_REDIRECTS : options.maxRedirects;\n  if (options.cookie) {\n    [].concat(options.cookie || []).forEach(function (cookie) {\n      options.cookies.set(cookie, url);\n    });\n    options.cookie = false;\n  }\n  var fetchRes = options.fetchRes;\n  var parsed = urllib.parse(url);\n  var method = (options.method || '').toString().trim().toUpperCase() || 'GET';\n  var finished = false;\n  var cookies;\n  var body;\n  var handler = parsed.protocol === 'https:' ? https : http;\n  var headers = {\n    'accept-encoding': 'gzip,deflate'\n  };\n  Object.keys(options.headers || {}).forEach(function (key) {\n    headers[key.toLowerCase().trim()] = options.headers[key];\n  });\n  if (options.userAgent) {\n    headers['User-Agent'] = options.userAgent;\n  }\n  if (parsed.auth) {\n    headers.Authorization = 'Basic ' + new Buffer(parsed.auth).toString('base64');\n  }\n  if (cookies = options.cookies.get(url)) {\n    headers.cookie = cookies;\n  }\n  if (options.body) {\n    if (options.contentType !== false) {\n      headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';\n    }\n    if (typeof options.body.pipe === 'function') {\n      // it's a stream\n      headers['Transfer-Encoding'] = 'chunked';\n      body = options.body;\n      body.on('error', function (err) {\n        if (finished) {\n          return;\n        }\n        finished = true;\n        fetchRes.emit('error', err);\n      });\n    } else {\n      if (options.body instanceof Buffer) {\n        body = options.body;\n      } else if (typeof options.body === 'object') {\n        body = new Buffer(Object.keys(options.body).map(function (key) {\n          var value = options.body[key].toString().trim();\n          return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n        }).join('&'));\n      } else {\n        body = new Buffer(options.body.toString().trim());\n      }\n      headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';\n      headers['Content-Length'] = body.length;\n    }\n    // if method is not provided, use POST instead of GET\n    method = (options.method || '').toString().trim().toUpperCase() || 'POST';\n  }\n  var req;\n  var reqOptions = {\n    method: method,\n    host: parsed.hostname,\n    path: parsed.path,\n    port: parsed.port ? parsed.port : parsed.protocol === 'https:' ? 443 : 80,\n    headers: headers,\n    rejectUnauthorized: false,\n    agent: false\n  };\n  if (options.tls) {\n    Object.keys(options.tls).forEach(function (key) {\n      reqOptions[key] = options.tls[key];\n    });\n  }\n  try {\n    req = handler.request(reqOptions);\n  } catch (E) {\n    finished = true;\n    setImmediate(function () {\n      fetchRes.emit('error', E);\n    });\n    return fetchRes;\n  }\n  if (options.timeout) {\n    req.setTimeout(options.timeout, function () {\n      if (finished) {\n        return;\n      }\n      finished = true;\n      req.abort();\n      fetchRes.emit('error', new Error('Request Tiemout'));\n    });\n  }\n  req.on('error', function (err) {\n    if (finished) {\n      return;\n    }\n    finished = true;\n    fetchRes.emit('error', err);\n  });\n  req.on('response', function (res) {\n    var inflate;\n    if (finished) {\n      return;\n    }\n    switch (res.headers['content-encoding']) {\n      case 'gzip':\n      case 'deflate':\n        inflate = zlib.createUnzip();\n        break;\n    }\n    if (res.headers['set-cookie']) {\n      [].concat(res.headers['set-cookie'] || []).forEach(function (cookie) {\n        options.cookies.set(cookie, url);\n      });\n    }\n    if ([301, 302, 303, 307, 308].indexOf(res.statusCode) >= 0 && res.headers.location) {\n      // redirect\n      options.redirects++;\n      if (options.redirects > options.maxRedirects) {\n        finished = true;\n        fetchRes.emit('error', new Error('Maximum redirect count exceeded'));\n        req.abort();\n        return;\n      }\n      return fetch(urllib.resolve(url, res.headers.location), options);\n    }\n    if (res.statusCode >= 300) {\n      finished = true;\n      fetchRes.emit('error', new Error('Invalid status code ' + res.statusCode));\n      req.abort();\n      return;\n    }\n    res.on('error', function (err) {\n      if (finished) {\n        return;\n      }\n      finished = true;\n      fetchRes.emit('error', err);\n      req.abort();\n    });\n    if (inflate) {\n      res.pipe(inflate).pipe(fetchRes);\n      inflate.on('error', function (err) {\n        if (finished) {\n          return;\n        }\n        finished = true;\n        fetchRes.emit('error', err);\n        req.abort();\n      });\n    } else {\n      res.pipe(fetchRes);\n    }\n  });\n  setImmediate(function () {\n    if (body) {\n      try {\n        if (typeof body.pipe === 'function') {\n          return body.pipe(req);\n        } else {\n          req.write(body);\n        }\n      } catch (err) {\n        finished = true;\n        fetchRes.emit('error', err);\n        return;\n      }\n    }\n    req.end();\n  });\n  return fetchRes;\n}","map":{"version":3,"names":["http","require","https","urllib","zlib","PassThrough","Cookies","MAX_REDIRECTS","module","exports","url","options","fetch","fetchRes","cookies","redirects","maxRedirects","isNaN","cookie","concat","forEach","set","parsed","parse","method","toString","trim","toUpperCase","finished","body","handler","protocol","headers","Object","keys","key","toLowerCase","userAgent","auth","Authorization","Buffer","get","contentType","pipe","on","err","emit","map","value","encodeURIComponent","join","length","req","reqOptions","host","hostname","path","port","rejectUnauthorized","agent","tls","request","E","setImmediate","timeout","setTimeout","abort","Error","res","inflate","createUnzip","indexOf","statusCode","location","resolve","write","end"],"sources":["C:/Users/Admin/OneDrive/Desktop/Online Book Thrift Store/frontend/node_modules/nodemailer-fetch/lib/fetch.js"],"sourcesContent":["'use strict';\n\nvar http = require('http');\nvar https = require('https');\nvar urllib = require('url');\nvar zlib = require('zlib');\nvar PassThrough = require('stream').PassThrough;\nvar Cookies = require('./cookies');\n\nvar MAX_REDIRECTS = 5;\n\nmodule.exports = function (url, options) {\n    return fetch(url, options);\n};\n\nmodule.exports.Cookies = Cookies;\n\nfunction fetch(url, options) {\n    options = options || {};\n\n    options.fetchRes = options.fetchRes || new PassThrough();\n    options.cookies = options.cookies || new Cookies();\n    options.redirects = options.redirects || 0;\n    options.maxRedirects = isNaN(options.maxRedirects) ? MAX_REDIRECTS : options.maxRedirects;\n\n    if (options.cookie) {\n        [].concat(options.cookie || []).forEach(function (cookie) {\n            options.cookies.set(cookie, url);\n        });\n        options.cookie = false;\n    }\n\n    var fetchRes = options.fetchRes;\n    var parsed = urllib.parse(url);\n    var method = (options.method || '').toString().trim().toUpperCase() || 'GET';\n    var finished = false;\n    var cookies;\n    var body;\n\n    var handler = parsed.protocol === 'https:' ? https : http;\n\n    var headers = {\n        'accept-encoding': 'gzip,deflate'\n    };\n\n    Object.keys(options.headers || {}).forEach(function (key) {\n        headers[key.toLowerCase().trim()] = options.headers[key];\n    });\n\n    if (options.userAgent) {\n        headers['User-Agent'] = options.userAgent;\n    }\n\n    if (parsed.auth) {\n        headers.Authorization = 'Basic ' + new Buffer(parsed.auth).toString('base64');\n    }\n\n    if ((cookies = options.cookies.get(url))) {\n        headers.cookie = cookies;\n    }\n\n    if (options.body) {\n        if (options.contentType !== false) {\n            headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';\n        }\n\n        if (typeof options.body.pipe === 'function') {\n            // it's a stream\n            headers['Transfer-Encoding'] = 'chunked';\n            body = options.body;\n            body.on('error', function (err) {\n                if (finished) {\n                    return;\n                }\n                finished = true;\n                fetchRes.emit('error', err);\n            });\n        } else {\n            if (options.body instanceof Buffer) {\n                body = options.body;\n            } else if (typeof options.body === 'object') {\n                body = new Buffer(Object.keys(options.body).map(function (key) {\n                    var value = options.body[key].toString().trim();\n                    return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n                }).join('&'));\n            } else {\n                body = new Buffer(options.body.toString().trim());\n            }\n\n            headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';\n            headers['Content-Length'] = body.length;\n        }\n        // if method is not provided, use POST instead of GET\n        method = (options.method || '').toString().trim().toUpperCase() || 'POST';\n    }\n\n    var req;\n    var reqOptions = {\n        method: method,\n        host: parsed.hostname,\n        path: parsed.path,\n        port: parsed.port ? parsed.port : (parsed.protocol === 'https:' ? 443 : 80),\n        headers: headers,\n        rejectUnauthorized: false,\n        agent: false\n    };\n\n    if (options.tls) {\n        Object.keys(options.tls).forEach(function (key) {\n            reqOptions[key] = options.tls[key];\n        });\n    }\n\n    try {\n        req = handler.request(reqOptions);\n    } catch (E) {\n        finished = true;\n        setImmediate(function () {\n            fetchRes.emit('error', E);\n        });\n        return fetchRes;\n    }\n\n    if (options.timeout) {\n        req.setTimeout(options.timeout, function () {\n            if (finished) {\n                return;\n            }\n            finished = true;\n            req.abort();\n            fetchRes.emit('error', new Error('Request Tiemout'));\n        });\n    }\n\n    req.on('error', function (err) {\n        if (finished) {\n            return;\n        }\n        finished = true;\n        fetchRes.emit('error', err);\n    });\n\n    req.on('response', function (res) {\n        var inflate;\n\n        if (finished) {\n            return;\n        }\n\n        switch (res.headers['content-encoding']) {\n            case 'gzip':\n            case 'deflate':\n                inflate = zlib.createUnzip();\n                break;\n        }\n\n        if (res.headers['set-cookie']) {\n            [].concat(res.headers['set-cookie'] || []).forEach(function (cookie) {\n                options.cookies.set(cookie, url);\n            });\n        }\n\n        if ([301, 302, 303, 307, 308].indexOf(res.statusCode) >= 0 && res.headers.location) {\n            // redirect\n            options.redirects++;\n            if (options.redirects > options.maxRedirects) {\n                finished = true;\n                fetchRes.emit('error', new Error('Maximum redirect count exceeded'));\n                req.abort();\n                return;\n            }\n            return fetch(urllib.resolve(url, res.headers.location), options);\n        }\n\n        if (res.statusCode >= 300) {\n            finished = true;\n            fetchRes.emit('error', new Error('Invalid status code ' + res.statusCode));\n            req.abort();\n            return;\n        }\n\n        res.on('error', function (err) {\n            if (finished) {\n                return;\n            }\n            finished = true;\n            fetchRes.emit('error', err);\n            req.abort();\n        });\n\n        if (inflate) {\n            res.pipe(inflate).pipe(fetchRes);\n            inflate.on('error', function (err) {\n                if (finished) {\n                    return;\n                }\n                finished = true;\n                fetchRes.emit('error', err);\n                req.abort();\n            });\n        } else {\n            res.pipe(fetchRes);\n        }\n    });\n\n    setImmediate(function () {\n        if (body) {\n            try {\n                if (typeof body.pipe === 'function') {\n                    return body.pipe(req);\n                } else {\n                    req.write(body);\n                }\n            } catch (err) {\n                finished = true;\n                fetchRes.emit('error', err);\n                return;\n            }\n        }\n        req.end();\n    });\n\n    return fetchRes;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}